{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "dev-azdf-001"
		},
		"ls_datalake200040_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_datalake200040'"
		},
		"ls_datalake4000700_tonvmsa_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_datalake4000700_tonvmsa'"
		},
		"ls_dataworkspace400040_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_dataworkspace400040'"
		},
		"ls_datalake200040_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://devdeltalakesa.dfs.core.windows.net/"
		},
		"ls_datalake4000700_tonvmsa_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://tonvmsa.dfs.core.windows.net/"
		},
		"ls_dataworkspace400040_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "metadevsqlserver.database.windows.net"
		},
		"ls_dataworkspace400040_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "metadevsql"
		},
		"ls_dataworkspace400040_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sqladmin"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_01_CSV_Serverless')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Correlationid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Correlationid",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Operationname",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Operationname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Eventcategory",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Eventcategory",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Level",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Level",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Time",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Time",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Subscription",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Subscription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Eventinitiatedby",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Eventinitiatedby",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Resourcetype",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Resourcetype",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Resourcegroup",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Resourcegroup",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Resource",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Resource",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_datalake_200040_ActivityLog_CSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_dataworkspace400040_datapool_PoolActivityLog",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_datalake_200040_ActivityLog_CSV')]",
				"[concat(variables('factoryId'), '/datasets/ds_dataworkspace400040_datapool_PoolActivityLog')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "01-Activity-CopyData",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "*",
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_datalake4000700_insights",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "datalake40007000_nsgflowlogs",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "02-Activity-NSGFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "01-Activity-CopyData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "01_NSG_Flow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SourceNSGFlogLog": {},
									"SinkFlowTuples": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "None",
							"cacheSinks": {
								"firstRowOnly": true
							}
						}
					},
					{
						"name": "DeleteFile",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "02-Activity-NSGFlow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "datalake40007000_nsgflowlogs",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"wildcardFileName": "*.*",
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_datalake4000700_insights')]",
				"[concat(variables('factoryId'), '/datasets/datalake40007000_nsgflowlogs')]",
				"[concat(variables('factoryId'), '/dataflows/01_NSG_Flow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/datalake40007000_nsgflowlogs')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalake200040",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "staging"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"records": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"time": {
										"type": "string"
									},
									"systemId": {
										"type": "string"
									},
									"macAddress": {
										"type": "string"
									},
									"category": {
										"type": "string"
									},
									"resourceId": {
										"type": "string"
									},
									"operationName": {
										"type": "string"
									},
									"properties": {
										"type": "object",
										"properties": {
											"Version": {
												"type": "integer"
											},
											"flows": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"rule": {
															"type": "string"
														},
														"flows": {
															"type": "array",
															"items": {
																"type": "object",
																"properties": {
																	"mac": {
																		"type": "string"
																	},
																	"flowTuples": {
																		"type": "array",
																		"items": {
																			"type": "string"
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalake200040')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_datalake4000700_insights')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalake4000700_tonvmsa",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "insights-logs-networksecuritygroupflowevent"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalake4000700_tonvmsa')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_datalake_200040_ActivityLog_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalake200040",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "udemy_testing",
						"fileSystem": "processed"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Correlationid",
						"type": "String"
					},
					{
						"name": "Operationname",
						"type": "String"
					},
					{
						"name": "Status",
						"type": "String"
					},
					{
						"name": "Eventcategory",
						"type": "String"
					},
					{
						"name": "Level",
						"type": "String"
					},
					{
						"name": "Time",
						"type": "String"
					},
					{
						"name": "Subscription",
						"type": "String"
					},
					{
						"name": "Eventinitiatedby",
						"type": "String"
					},
					{
						"name": "Resourcetype",
						"type": "String"
					},
					{
						"name": "Resourcegroup",
						"type": "String"
					},
					{
						"name": "Resource",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalake200040')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_dataworkspace400040_datapool_PoolActivityLog')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_dataworkspace400040",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Correlationid",
						"type": "varchar"
					},
					{
						"name": "Operationname",
						"type": "varchar"
					},
					{
						"name": "Status",
						"type": "varchar"
					},
					{
						"name": "Eventcategory",
						"type": "varchar"
					},
					{
						"name": "Level",
						"type": "varchar"
					},
					{
						"name": "Time",
						"type": "varchar"
					},
					{
						"name": "Subscription",
						"type": "varchar"
					},
					{
						"name": "Eventinitiatedby",
						"type": "varchar"
					},
					{
						"name": "Resourcetype",
						"type": "varchar"
					},
					{
						"name": "Resourcegroup",
						"type": "varchar"
					},
					{
						"name": "Resource",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "PoolActivityLog"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_dataworkspace400040')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_dataworkspace40040_FlowTuples')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_dataworkspace400040",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "RecordTime",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "RuleName",
						"type": "varchar"
					},
					{
						"name": "SourceIPAddress",
						"type": "varchar"
					},
					{
						"name": "DestinationIPAddress",
						"type": "varchar"
					},
					{
						"name": "SourcePort",
						"type": "varchar"
					},
					{
						"name": "Decision",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FlowTuples"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_dataworkspace400040')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_datalake200040')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_datalake200040_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_datalake200040_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_datalake4000700_tonvmsa')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_datalake4000700_tonvmsa_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_datalake4000700_tonvmsa_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_dataworkspace400040')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ls_dataworkspace400040_properties_typeProperties_server')]",
					"database": "[parameters('ls_dataworkspace400040_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_dataworkspace400040_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_dataworkspace400040_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ScheduleTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_01_CSV_Serverless",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 5,
						"startTime": "2024-08-01T15:04:00",
						"timeZone": "Mountain Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_01_CSV_Serverless')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/01_NSG_Flow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "datalake40007000_nsgflowlogs",
								"type": "DatasetReference"
							},
							"name": "SourceNSGFlogLog"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_dataworkspace40040_FlowTuples",
								"type": "DatasetReference"
							},
							"name": "SinkFlowTuples"
						}
					],
					"transformations": [
						{
							"name": "flattenLogs"
						},
						{
							"name": "derivedColumnNSGFlow"
						},
						{
							"name": "selectColumns"
						}
					],
					"scriptLines": [
						"source(output(",
						"          records as (time as string, systemId as string, macAddress as string, category as string, resourceId as string, operationName as string, properties as (Version as integer, flows as (rule as string, flows as (mac as string, flowTuples as string[])[])[]))[]",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine') ~> SourceNSGFlogLog",
						"SourceNSGFlogLog foldDown(unrollMultiple(records,records.properties.flows.flows.flowTuples),",
						"     mapColumn(",
						"          records,",
						"          flowTuples = records.properties.flows.flows.flowTuples",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flattenLogs",
						"flattenLogs derive(RecordTime = records.time,",
						"          RuleName = records.properties.flows.rule,",
						"          SourceIPAddress = split(flowTuples, \",\")[2],",
						"          DestinationIPAddress = split(flowTuples, \",\")[3],",
						"          SourcePort = split(flowTuples, \",\")[5],",
						"          Decision = split(flowTuples, \",\")[8]) ~> derivedColumnNSGFlow",
						"derivedColumnNSGFlow select(mapColumn(",
						"          RecordTime,",
						"          RuleName,",
						"          SourceIPAddress,",
						"          DestinationIPAddress,",
						"          SourcePort,",
						"          Decision",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectColumns",
						"selectColumns sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          RecordTime as string,",
						"          RuleName as string,",
						"          SourceIPAddress as string,",
						"          DestinationIPAddress as string,",
						"          SourcePort as string,",
						"          Decision as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          RecordTime,",
						"          RuleName,",
						"          SourceIPAddress,",
						"          DestinationIPAddress,",
						"          SourcePort,",
						"          Decision",
						"     )) ~> SinkFlowTuples"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/datalake40007000_nsgflowlogs')]",
				"[concat(variables('factoryId'), '/datasets/ds_dataworkspace40040_FlowTuples')]"
			]
		}
	]
}